#nop include multiplayer;

#nop QoL debug alias---------------------------------------------;
#ali {^t+%1} {#class %1 read %1.tin; #var class_opened $class_opened|%1;}
#ali {^t-%1} {#class %1 kill; #repl class_opened {%1} {}; #repl class_opened {||} {}}
#ali {^t@%1} {#class %1 kill; #class %1 read %1.tin;}

#ali {^p %1} {#echo $%1}
#ali {^plist %1} { #local tmp @plist{%1}; }
#ali {^func %1} {#echo @%1}

#func plist { #nop %1 plain list_name;
    #local simpList {};
    #foreach $%1[%*] tmp {
        #if {@length{$simpList} == 0} {
            #format simpList {%s} $tmp;
        };
        #else {
            #format simpList {%s;%s} $simpList $tmp;
        };
    };
    #echo %s $simpList;
}
#func length { #nop %1 string;
    #format result %L %1;
}
#func sizeof { #nop %1 list name;
    #list %1 size result;
}
#func eval { #nop %1 string;
    #math result {%1};
}

#func max { #nop %1: num a, %2: num b;
    #if {%1 > %2} {#return %1} {#return %2}
}

#func truncToWidth { #nop %1, string to be truncated;
    #screen get cols screenWidth;
    #math screenWidth {$screenWidth-1};

    #format line {%.${screenWidth}s} {%1};
    #nop CAUTION: format %.xxs str bug, might have space at start;
    #repl line {{^\s+}} {};
    #var result {$line};
    #unvar screenWidth;
}

#nop full skills-----------------------------------------------------;
#ali {^fullskill %d} {
    t+lian;
    #echo {to level %1};
    #var _level_lian %1;
}

#ali {^daman$} {
    #class daman read daman.tin;
    #var class_opened $class_opened|daman;
    yun inspire;
}
#ali {^dazhu$} {
    #class daman kill;
    #repl class_opened {daman} {};
    #repl class_opened {||} {};

    halt;
    yun recover;
}


#nop battle----------------------------------------------------------;
#ali {^k %1$} {
    @getPowerUp{};
    kill %1;
}
#ali {^ka%1$} {killall%1}
#ali {^h %1} {
    @getPowerUp{};
    hit %1;
}
#ali {^laozhen %1} {
    yun powerup;
    yun laozhen %1;
}
#ali {^es$} {
    halt;
    $list_exit[1];
}

#ali {^fa %1} {
    #if {%1 == 1} {
        set ForcedAct %1;
    } {
        unset ForcedAct;
    }
}

#ali {^tar %1} {
    #var target_name %1;
    id here;
    #nop #line oneshot #act {{^(\S+)\s+=\s(\S[^,]+,\s)*%1(,[^,]+)*$}} {
    #nop     #var target_name %%2;
    #nop     #var target_id %1;
    look;
    #nop };
}
#ali {^k$} {
    @getPowerUp{};
    #echo {kill $target_id};
    kill $target_id;
}

#nop QoL---------------------------------------------------------------;
#ali {^hf %1} {
    helpme find %1;
    helpme* thanks;
}
#ali {^home$} {enter $myId};
#ali {^bao%1$} {
    #regexp {%1} {{-\S+}} {
        #local id {%1};
        #rep id {-} {};
        get $id from bao;
    } {
        put%1 in bao;
    }
}
#ali {^ls$} {#system ./lsix};

#ali {^sto$} {status_me -o};
#ali {^stf$} {status_me -f};

#ali {^joball$} {
    #echo {target: %s(%s)lv.%s; job: %s@%s} $target_name $target_id $target_lvl $job_name $job_loc;
    #echo {lian: %s lv.%s; triggers: %s} $type_lian $lvl_lian $class_opened;
};

#ali {^fawang$} { ask fawang about 风火轮}

#ali {^larmor$} {
    #local armors {armor;boots;cloth;hands;head;shield;surcoat;waist;wrists;finger;neck;heart;shoulder;leg;face};
    #list _list_armors cre $armors;
    #var _armor_cnt 0;

    #foreach *_list_armors[%*] _armor_index {
        #nop in delay, $_armor_index won't be evaluated until executed;
        #nop #delay $_armor_index {#send {list $_list_armors[$_armor_index] pro}};

        #delay {$_armor_index-0.5} {#math _armor_cnt {$_armor_cnt+1}};
        #delay $_armor_index {#send {list $_list_armors[$_armor_cnt] pro}};
    };
    #unvar _armor_index, _armor_cnt;
}

#ali {^rew$} {remove all;wear all}
#nop map related-------------------------------------------------------;
#ali {^map} {help map-pkuxkx}

#nop walk;
#ali {^gt$} {walk -c}
#ali {^gt %1} {
    #var dst_walk %1;
    #send {walk -c};
    #class walk_trigger read walk_trigger.tin;
    #var class_opened $class_opened|walk_trigger;
}
#ali {^gt?%1} {
    #local index $locationIndex[%1];
    #if {@length{$index}} {
        #echo {%s-%s} $locationCNName[$index] $locationPY[$index];
    };
    #else {
        #list fuzzySearch token {%1};
        #list fuzzySearch sim {};
        #rep fuzzySearch {;} {.?};

        #var list_index {};
        #foreach *locationPY[%*] index {
            #if { {$locationPY[$index]} == {{.?$fuzzySearch.?}} } {
                #list list_index ins 1 {$index};
            };
        };

        #if {@sizeof{list_index}} {
            #local locations {};
            #foreach $list_index[%*] index {
                #var locations {$locations $locationCNName[$index]-$locationPY[$index]};
            };
            #echo {可能的地点：$locations};
        };
        #else {
            #echo {%s not found} {%1};
        };
    };
}
#ali {^gt-%1-%2$} {
    #local tmp @getPathPY{%1;%2}
}

#nop pop walk stack to go back;
#ali {^bk$} {
    #var _list_reverse_path {};
    #foreach $_stack_walk[%*] _dir {
        #list _list_reverse_path ins -1 {@getReverseDir{$_dir}};
    };
    #nop #list _list_reverse_path ins -1 {do_look};
    #list _list_reverse_path sim {};
    #repl _list_reverse_path {;} {|};

    #var _stack_walk {};

    #if {@length{$_list_reverse_path}} {
        set walk_path $_list_reverse_path;
        walk path;
    } {#echo {<aff>walk stack empty =.=}
    };
}

#nop #ali {^yzqlc} {
    set walk_path do_enter shudong|do_say 天堂有路你不走|down|1|north|northwest|northwest|northwest|north|northwest|up|east;
    walk path;
};
#nop #ali {^qlcyz} {
    set walk_path west|do_enter dong|southeast|south|southeast|southeast|southeast|south|south|up|out;
    walk path;
};
#ali {^mz$} {knock gate 4;knock gate 2;knock gate 5;knock gate 3};
#ali {^gb$} {enter shudong;say 天堂有路你不走呀;d};
#ali {^px$} {ask wu about 射月弓;give wu gong;
    #delay 1 {push desk;d;light lampn;light lamps;light lampe;light lampw;d;break men;d}
}
#ali {^sandu$} {ask du nan about 菩提子;ask du e about 伏魔刀;ask du jie about 金刚罩}
#ali {^jqg$} {@getJueqingguPath{enter}};
#ali {^jqgb$} {@getJueqingguPath{back}};
#nop ???
#ali {^fm$} {w;e;s;e;n;n;e;w;s}
#ali {^ch$} {w;n;w;s;s;e;e;w}
#ali {^chb$} {e;s;n;w;n;n;e;s;e}

#nop job-------------------------------------------------------;
#ali {^luren %1$} {
    #regexp {$class_opened} {{.*juewei.*}} {} {
        #class juewei read juewei.tin;
        #var class_opened $class_opened|juewei;
    };

    #loop 1 %1 tmp_index {
        ask luren $tmp_index about 消息;
        look luren $tmp_index;
    };

    #delay 2 {#echo {asked <faf>@sizeof{list_juewei_name}<eee> suspects~}};
}
#ali {^lurend %1$} {
    ask %1 about 盗贼;
}
#ali {^lurenc$} {
    #var tmp @print_juewei{};
}

#ali {^pozhen$} {
    #class pozhen read pozhen.tin;
    #format class_opened {%s|pozhen} $class_opened;

    yun recover;
    #nop set ForcedAct 1;
    jiali max;

    @getPowerUp{};
    yun qi;

    zhanbu -maze;
}

#ali {^gc$} {
    #regex {$_walk_prefix} {gan che to } {
        #var _walk_prefix {};
        #echo {resetting walk..};
    } {
        #var _walk_prefix {gan che to };
        #echo {begin ganche};
    };
}

#ali {^ht$} {scoop flower}

#ali {^db$} {
    #foreach *_list_db_look_id[%*] index {
        #if {{$_list_db_look_id[$index]} == {$_list_db_look_id[-1]}} {
            #list _list_db_look_id set $index {
                #delay $index {look $_list_db_look_id[-1] @eval{1+@sizeof{_list_db_look_id}-$index}};
            }
        } {
            #list _list_db_look_id set $index {
                #delay $index {look $_list_db_look_id[$index]};
            }
        };

        $_list_db_look_id[$index];
    };
}

#ali {^hb$} {
    #nop check ganche prefix;
    #if {!@length{$_walk_prefix}} {gc};
    t+hubiao;
};
#nop aobai-------------------------------------------------------;
#ali {^aobai %1$} {
    #format class_opened $class_opened|aobai;
    #tick aobai {
        t-daman;halt;w;k ao;
        #delay 30 {sc;get duan;e;open men;daman}
    } %1;
};
#ali {^chanh$} {chanhui;#tick chanhui {chanhui} 59};
#ali {^noaobai$} {
    #untic {aobai%*};
    #repl class_opened {aobai} {};
    #repl class_opened {||} {};
}
