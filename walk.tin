#nop include alias, macro;
#nop var initialisation----------------------------------------------;

#list locationName create {yangzhou; xinyang; gaibang; qufu; qingliang; shashou; zhenjiang; jiangzhou; xiangyang; xuchang; nanyang; wudang; jingzhou; luoyang; huashancun; huashan; quanzhen; gumu; tonghua; ruzhou; jinyang; qilincun; shaolin; huaibei; chengdu; huijiang; lingjiu; lingzhou; zanpu; lanzhou; huangzhong; xingxiu; riyue; guangan; zhangjiakou; guanwai; puyang; yueyang; suzhou; jiaxing; fuzhou; mingzhou; linan; quanzhou; nanchang; yixing; murong; guiyun; lujiazhuang; yuewangmu; yashan; putian; meizhuang; miaojiang; dali; tianlong; emei; kunming; pingxi; lingxiao; dalunsi; menggu; taishan; tongquetai; chaoyang; shence; zhengyang; jinguang; mingde; anding; yongan; desheng; yanziji; qingzhou; dengzhou; weihaiwei; dongdukou; yandang; hankou; jiyuan; handan; cangzhou; jinzhou; fenglingdu; zhengding; baozhou; tanggu; daizhou; datong}
#list locationPY create {yz; xiy; gb; qf; jk; ssb; zj; jaz; xay; xc; ny; wd; jgz; ly; hsc; hs; qzp; gm; ca; rz; jny; qlc; sl; hb; cd; hj; lj; liz; zp; laz; hz; xx; ry; bj; zjk; gw; py; yy; sz; jx; fz; mzf; la; quz; nc; yx; mr; gy; ljz; ywm; ys; pt; mz; mj; dl; tls; em; km; px; lx; dls; mg; ts; tqt; cy; sc; zy; jg; md; ad; ya; ds; yzj; qiz; dez; whw; lad; yd; hk; jiy; hd; cz; jiz; fld; zd; bz; tg; daz; dt};
#list locationCNName create {"扬州"; "信阳"; "扬州丐帮分舵"; "曲阜"; "建康府清凉门"; "杀手帮"; "镇江"; "江州"; "襄阳"; "许昌"; "南阳"; "武当山"; "荆州府"; "洛阳"; "华山村"; "华山"; "全真派"; "古墓派"; "长安通化门"; "汝州"; "晋阳"; "麒麟村"; "少林寺"; "淮北"; "成都"; "回疆小镇"; "灵鹫宫"; "灵州"; "赞普广场"; "兰州"; "湟中"; "星宿海"; "日月神教"; "北京广安门"; "张家口"; "关外"; "濮阳"; "岳阳"; "苏州"; "嘉兴"; "福州"; "明州府"; "临安府"; "泉州"; "南昌"; "义兴县"; "慕容苏州入口"; "归云庄"; "陆家庄"; "岳王墓"; "牙山"; "莆田"; "西湖梅庄"; "南昌苗疆入口"; "大理城"; "天龙寺"; "峨嵋山"; "昆明"; "平西王府"; "凌霄城"; "大轮寺"; "蒙古"; "泰山"; "铜雀台"; "建康府朝阳门"; "建康府神策门"; "建康府正阳门"; "长安金光门"; "长安明德门"; "北京北安定门"; "北京南永安门"; "北京德胜门"; "燕子矶"; "青州"; "登州"; "威海卫"; "临安府钱塘东渡口"; "雁荡山"; "汉口镇"; "济源"; "邯郸"; "沧州"; "晋州"; "风陵渡"; "正定镇"; "保州"; "塘沽口"; "代州"; "大同"}

#var locationIndex {}
#var locationCNIndex {}

#loop 1 @sizeof{locationName} count {
    #var locationIndex[$locationName[$count]] $count;
    #var locationCNIndex[$locationCNName[$count]] $count;
};

#var adjacentMatrix {};
#var tmp_list{}

#nop indented for length check;
#var tmp_list[1]  {0;2;3;2;0;0;20;0;0;0;0;0;0;0;2;0;0;0;0;3;0;3;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0;0;0;0;19;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[2]  {2;0;0;0;0;2;0;18;2;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[3]  {3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[4]  {2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;17;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[5]  {0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;3;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[6]  {0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[7]  {20;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[8]  {0;18;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[9]  {0;2;0;0;0;0;0;0;0;0;2;4;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[10] {0;2;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0.5;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0 }
#var tmp_list[11] {0;0;0;0;0;0;0;0;2;2;0;0;0;2;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[12] {0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[13] {0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;16;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[14] {0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;3;3;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[15] {0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;2;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[16] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[17] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[18] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[19] {0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[20] {3;0;0;0;0;0;0;0;0;0.5;0;0;0;3;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[21] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;2;0;0;8;0     }
#var tmp_list[22] {3;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[23] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[24] {0;0;0;2;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[25] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;14;0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;9;2;4;0;0;0;7;0;0;0;0;0;0;0;16;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[26] {0;0;0;0;0;0;0;0;5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[27] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[28] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;100;20;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0  }
#var tmp_list[29] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;14;0;0;100;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0  }
#var tmp_list[30] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;20;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[31] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[32] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[33] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0     }
#var tmp_list[34] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;2;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[35] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;7   }
#var tmp_list[36] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[37] {0;0;0;17;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0.5;3;0;0;0;0;0;0;0}
#var tmp_list[38] {0;0;0;0;0;0;0;2;0;0;0;0;16;0;0;0;0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[39] {0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;2;2;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[40] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;3;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[41] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[42] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;2;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[43] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;7;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[44] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;2;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0 }
#var tmp_list[45] {0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[46] {0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[47] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[48] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[49] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[50] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[51] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[52] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[53] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[54] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[55] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;9;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[56] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[57] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[58] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[59] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[60] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[61] {4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;7;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[62] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[63] {0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[64] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[65] {0;0;0;0;2;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[66] {19;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;4;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0  }
#var tmp_list[67] {0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[68] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[69] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;16;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[70] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[71] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0;4;0;0;0;0;0;0;0;0;0;0;0;0;0;2;100;0;0   }
#var tmp_list[72] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;4;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[73] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[74] {0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[75] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[76] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[77] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;2;7;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0   }
#var tmp_list[78] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0     }
#var tmp_list[79] {0;2;0;0;0;0;0;17;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0    }
#var tmp_list[80] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;2;0;0;0;0;0;0     }
#var tmp_list[81] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0.5;2;0;0;0 }
#var tmp_list[82] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;2;0;0     }
#var tmp_list[83] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;2;0;0;0;0;0     }
#var tmp_list[84] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0     }
#var tmp_list[85] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0.5;0;0;0 }
#var tmp_list[86] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;0;2;2;0;0;0.5;0;2;3;0   }
#var tmp_list[87] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;100;0;0;0;0;0;0;0;0;0;0;2;0;0;0;2;0;0;0   }
#var tmp_list[88] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;8;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;3     }
#var tmp_list[89] {0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;7;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0     }

#loop 1 @sizeof{tmp_list} count {
    #list adjacentMatrix[$count] creat $tmp_list[$count];
}
#line quiet #unvar tmp_list;

#var _stack_walk {};
#nop end var initialisation------------------------------------------;


#nop func------------------------------------------------------------;
#func getPath { #nop %1 index_src, %2 index_dst;
    #echo {getPath %1,%2};

    #var unvisited {};
    #nop debug local;
    #var dist {};
    #var prev {};
    #nop;

    #loop 1 @sizeof{locationName} count {
        #var dist[$count] 1000;
        #var prev[$count] 0;
        #var unvisited[$count] $count;
    };

    #var dist[%1] 0;

    #local depth @sizeof{locationName};
    #while {@sizeof{unvisited} != 0 && $depth > 0} {
        #math depth {$depth-1};

        #local min 1000;
        #local minIndex_inUnvisited 0;
        #local minLocation 0;
        
        #nop foreach $list will get both key and value..;
        #foreach *unvisited[%*] i {
            #local index $unvisited[$i];

            #if {@length{$dist[$index]} != 0 && $dist[$index] < $min} {
                #var min $dist[$index];
                #var minIndex_inUnvisited $i;
                #var minLocation $index;

                #nop #echo {new min: %s, location: %s, %s} $min $index $locationCNName[$index];
            }
        };

        #if {$minLocation == %2} {#break};

        #list unvisited delete $minIndex_inUnvisited;

        #foreach $unvisited[%*] index {
            #local distance $adjacentMatrix[$minLocation][$index];
            #if {@length{$distance} != 0 && $distance != 0} {
                #local altDist 1000;
                #math altDist {$dist[$minLocation]+$distance};
                #if {$altDist < $dist[$index]} {
                    #var dist[$index] $altDist;
                    #var prev[$index] $minLocation;

                    #nop #echo {%s -> %s} $locationCNName[$index] $locationCNName[$minLocation];
                };
            }
        }
    };

    #nop local cannot be used in #list, and will be NO error...;
    #var list_path {};
    #local index %2;
    #while {$prev[$index] != 0} {
        #list list_path insert 1 $locationName[$index];
        #format index $prev[$index];
    };
    #list list_path ins 1 $locationName[$index];

    #nop #list list_path simplify result;


    #nop line quiet is not working... leave the var now;
    #line quiet {#unvar unvisited};
}

#func walk { #nop %1 index_src;
    #echo {walk: %s, %s} %1 $dst_walk;
    #line quiet #local index_dst;
    #list locationPY find $dst_walk index_dst;
    #if {$index_dst == 0} {
        #echo {dst %s is not found} $dst_walk;

        #class walk_trigger kill;
        #repl class_opened {|walk_trigger} {};

        #return;
    };

    #if {%1 != $index_dst} { #nop not going to current node;
        #local tmp {@getPath{%1; $index_dst}};
        #line quiet #local tmp @plist{list_path};

        #send {set brief 3};
        #format _begin_time {%T};
        #echo {begin time: $_begin_time};
        #local tmp @getStep{};
    };
    #else {
        #class walk_trigger kill;
        #repl class_opened {|walk_trigger} {};
    };
}

#func getStep { #nop;

    #if {@sizeof{list_path} < 2} {

        #class walk_trigger kill;
        #repl class_opened {|walk_trigger} {};

        #send {set brief 1};
        look;
        #echo {<cfa>到达%s!<eee>} $locationCNName[$locationIndex[$list_path[1]]];

        #nop reset walk stack;
        #var _stack_walk {};
        #list _list_dir_input cre {look};

        #return;
    };

    #local src_step $list_path[1];
    #local dst_step $list_path[2];

    #local tmp @doStep{$src_step; $dst_step};
}

#func doStep { #nop %1 src_step, %2 dst_step;
    #echo {doStep: %s %s} %1 %2;

    #nop string comparison: #if {("fjdkaslfjdka" == "fdjkajdfla")} false;
    #nop #if {(fjdkaslfjdka == fdjkajdfla)} true;


    #nop andao 9--------------------------------------------------------------------------;
    #if {"%1" == "yangzhou" && "%2" == "dalunsi"} {
        set walk_path do_enter shudong|do_say 天堂有路你不走|down|9|southwest|south|southwest|southwest|southwest|out|southwest|westup|northwest;
        walk path;
    };
    #elseif {"%1" == "dalunsi" && "%2" == "yangzhou"} {
        set walk_path southeast|eastdown|northeast|do_enter dong|northeast|northeast|northeast|north|northeast|east|up|out;
        walk path;
    };
    #elseif {"%1" == "zanpu" && "%2" == "dalunsi"} {
        set walk_path north|north|north|eastup|do_enter dong|southeast|southwest|out|southwest|westup|northwest;
        walk path;
    };
    #elseif {"%1" == "dalunsi" && "%2" == "zanpu"} {
        set walk_path southeast|eastdown|northeast|do_enter dong|northeast|northwest|out|westdown|south|south|south;
        walk path;
    };

    #nop andao 1---------------------------------------------------------------------------;
    #elseif {"%1" == "yangzhou" && "%2" == "huashancun"} {
        set walk_path do_enter shudong|do_say 天堂有路你不走|down|1|north|north|up;
        walk path;
    };
    #elseif {"%1" == "yangzhou" && "%2" == "qilincun"} {
        set walk_path do_enter shudong|do_say 天堂有路你不走|down|1|north|northwest|northwest|northwest|north|northwest|up|east;
        walk path;
    };
    #elseif {"%1" == "qilincun" && "%2" == "yangzhou"} {
        set walk_path west|do_enter dong|southeast|south|southeast|southeast|southeast|south|south|up|out;
        walk path;
    };

    #nop andao 3---------------------------------------------------------------------------;
    #elseif {"%1" == "yangzhou" && "%2" == "ruzhou"} {
        set walk_path do_enter shudong|do_say 天堂有路你不走|down|3|northeast|northeast|up|southwest|east|southdown|east|east;
        walk path;
    };
    #elseif {"%1" == "ruzhou" && "%2" == "yangzhou"} {
        set walk_path west|west|northup|west|northeast|do_enter dong|southwest|southwest|southwest|up|out;
        walk path;
    };

    #nop andao 4----------------------------------------------------------------------------;
    #elseif {"%1" == "yangzhou" && "%2" == "huijiang"} {
        set walk_path do_enter shudong|do_say 天堂有路你不走|down|4|west|west|west|northwest;
        walk path;
    };

    #nop river------------------------------------------------------------------------------;
    #elseif {("%1" == "luoyang" && "%2" == "jinyang") || ("%1" == "jinyang" && "%2" == "luoyang")
        || ("%1" == "puyang" && "%2" == "qufu") || ("%1" == "qufu" && "%2" == "puyang")
        || ("%1" == "xinyang" && "%2" == "jiangzhou") || ("%1" == "jiangzhou" && "%2" == "xinyang")
        || ("%1" == "hankou" && "%2" == "jiangzhou")
        || ("%1" == "yangzhou" && "%2" == "zhenjiang") || ("%1" == "zhenjiang" && "%2" == "yangzhou")
        || ("%1" == "jingzhou" && "%2" == "yueyang") || ("%1" == "yueyang" && "%2" == "jingzhou")
        || ("%1" == "shence" && "%2" == "yangzhou") || ("%1" == "yangzhou" && "%2" == "shence")
        || ("%1" == "lingzhou" && "%2" == "lanzhou") || ("%1" == "lanzhou" && "%2" == "lingzhou")} {

            #nop walk_pause: 1 - use boat/cart to travel;
            #nop           : 0 - crossed river/cart arrived, walk again/continuously;
            #nop           : 2 - need to use ferry;
            #if {$walk_pause != 1} {#var walk_pause 1};
            #else {#var walk_pause 0};
            #echo {walk_pause: %s} $walk_pause;

            #if {"%1" == "shence" && $walk_pause} {walk yanziji};
            #if {"%2" == "shence"} {walk jiankang};
            #else {#send {walk %2}};
    };

    #nop ferry-------------------------------------------------------------------------------;
    #nop CAUTION: /**/ can only be used outside of code blocks;
    #nop basic logic:;
    #nop     if walk_pause equals 0, then walk to harbour, set walk_pause as 2;
    #nop     else if walk_pause equals 2, then ride ferry, set walk_pause as 1;
    #nop     else if walk_pause equals 1, then walk from harbour to destination, set walk_pause back to 0;
    #elseif {"%1" == "linan" && "%2" == "dongdukou"} {
        #switch {$walk_pause} {
            #case 0 {
                #var walk_pause 2; walk beidukou };
            #case 2 {
                #var walk_pause 0; ride };
        };
    };
    #elseif {"%1" == "dongdukou" && "%2" == "linan"} {
        #switch {$walk_pause} {
            #case 0 {
                #var walk_pause 1; ride north };
            #case 1 {
                #var walk_pause 0; walk %2 };
        };
    };
    #elseif {("%1" == "jinyang" && "%2" == "daizhou") || ("%1" == "daizhou" && "%2" == "jinyang")
        || ("%1" == "zhangjiakou" && "%2" == "datong") || ("%1" == "datong" && "%2" == "zhangjiakou") } {
        #switch {$walk_pause} {
            #case 0 {
                #var walk_pause 2; walk %2 };
            #case 2 {
                #var walk_pause 1; ride };
            #case 1 {
                #var walk_pause 0; walk %2 };
        };
    };

    #nop cart--------------------------------------------------------------------------------;
    #elseif {("%1" == "dalunsi" && ("%2" == "yueyang" || "%2" == "chengdu"))
        || ("%1" == "yueyang" && ("%2" == "dalunsi" || "%2" == "chengdu"))
        || ("%1" == "chengdu" && ("%2" == "dalunsi" || "%2" == "tianlong" || "%2" == "yueyang"))
        || ("%1" == "tianlong" && "%2" == "chengdu")
        || ("%1" == "huijiang" && "%2" == "xiangyang")
        || ("%1" == "jinguang" && "%2" == "huijiang") || ("%1" == "huijiang" && "%2" == "jinguang") } {

        #local dst %2;
        #if {"%2" == "tianlong"} {#local dst tianlongsi};
        #elseif {"%2" == "huijiang"} {#local dst huizuxiaozhen};
        #elseif {"%2" == "jinguang"} {#local dst changan};

        #if {$walk_pause != 1} {
            #var walk_pause 1;
            #send {set walk_path @getCartWalkPath{%1;up} $dst};
            #send {walk path};
        };
        #else {
            #var walk_pause 0;
            #send {set walk_path @getCartWalkPath{%2;down}};
            #send {walk path};
        };
    };

    #nop inCity-----------------------------------------------------------------------------;
    #elseif {"@isCityName{%1}" == "0" && "@isCityName{%2}" != "0"} {
        walk @isCityName{%2};
    };

    #nop normal walk (finally...T^T);
    #else {walk %2};
}

#nop save path connecting cart and nodes;
#func getCartWalkPath { #nop %1 cityName, %2 up/down;
    #if {"%2" == "down"} {
        #if {"%1" == "yueyang"} {#format result {do_xia|west|south}};
        #elseif {"%1" == "chengdu"} {#format result {do_xia|south|southeast|southeast}};
        #elseif {"%1" == "dalunsi"} {#format result {do_xia|west}};
        #elseif {"%1" == "jinguang"} {#format result {do_xia|south|west}};
        #elseif {"%1" == "huijiang"} {#format result {do_xia|southwest}};
        #elseif {"%1" == "tianlong"} {#format result {do_xia|east}};
        #elseif {"%1" == "xiangyang"} {#format result {do_xia|west|north|north|north}};
    };
    #else {
        #if {"%1" == "yueyang"} {#format result {north|east|do_gu|do_qu}};
        #elseif {"%1" == "chengdu"} {#format result {northwest|northwest|north|do_gu|do_qu}};
        #elseif {"%1" == "dalunsi"} {#format result {east|do_gu|do_qu}};
        #elseif {"%1" == "jinguang"} {#format result {east|north|do_gu|do_qu}};
        #elseif {"%1" == "huijiang"} {#format result {northeast|do_gu|do_qu}};
        #elseif {"%1" == "tianlong"} {#format result {west|do_gu|do_qu}};
        #elseif {"%1" == "xiangyang"} {#format result {south|south|south|east|do_gu|do_qu}};
    };
}

#nop check inCityName;
#func isCityName { #nop %1 locationName;
    #if {"%1" == "qingliang" || "%1" == "chaoyang" || "%1" == "shence" || "%1" == "zhengyang"} {#format result jiankang};
    #elseif {"%1" == "tonghua" || "%1" == "jinguang" || "%1" == "mingde"} {#format result changan};
    #elseif {"%1" == "guangan" || "%1" == "anding" || "%1" == "yongan" || "%1" == "desheng"} {#format result beijing};
    #elseif {"%1" == "dongdukou"} {#format result linan};
    #else { #format result 0};
}

#nop for debug;
#func getPathPY { #nop %1 src_walk, %2 dst_walk_py;
    #local index_dst;
    #list locationPY find %2 index_dst;
    #if {$index_dst == 0} {
        #echo {py %s is not found} %2;
        #return;
    };
    #list locationPY find %1 index_src;
    #if {$index_src == 0} {
        #echo {py %s is not found} %1;
        #return;
    };

    #local tmp @getPath{$index_src;$index_dst};
    #local tmp @plist{list_path};
}

#func forceGo {#nop %%1: src_full, %%2 dst_full;
    #list list_path cre {%1;%2};
    t+walk_trigger;

    #send {set brief 3};
    #format _begin_time {%T};
    #echo {begin time: $_begin_time};
    #local tmp @getStep{};
}

#nop reverse walking;
#func getReverseDir { #nop %1 direction to be reversed;
    #local dir %1;
    #if {{%1} == {%*west%*}} { #repl dir {west} {east}};
    #if {{%1} == {%*east%*}} { #repl dir {east} {west}};
    #if {{%1} == {%*north%*}} { #repl dir {north} {south}};
    #if {{%1} == {%*south%*}} { #repl dir {south} {north}};
    #if {{%1} == {%*up%*}} { #repl dir {up} {down}};
    #if {{%1} == {%*down%*}} { #repl dir {down} {up}};
    #if {{%1} == {%*enter%*}} { #repl dir {enter} {out}};
    #if {{%1} == {%*out%*}} { #repl dir {out} {enter}};

    #var result $dir;
}

#func stack_pop { #nop %1 stack_name;
    #if {@sizeof{%1}} {
        #var result $%1[1];
        #list %1 del 1;
    } {
        #var result "";
    };
};

#func stack_push_walk { #nop %1 stack_name, %2 dir_to_push;
    #local top_dir $%1[1];
    #if {"$top_dir" == "@getReverseDir{%2}"} {
        #local tmp @stack_pop{%1};
    } {
        #list %1 ins 1 {%2};
    }
}

#nop end func-------------------------------------------------;

/* TODO: if list_dir_input[1] in list_exit then push walk_stack
   else keep removing list_dir_input[1] until different dir found, then push walk_stack
 */
#eve {VARIABLE UPDATE _current_room_name} {

    #if {{$_list_dir_input} == {look}} {
        #list _list_dir_input del 1;
        #return;
    };

    #local _list_exits $list_exit;

    #if {@sizeof{_list_dir_input}} {

        #list _list_exits find {$_list_dir_input[1]} _index;

        #nop incorrect dir inputted;
        #if {$_index == 0} {
            #local dir_to_remove $_list_dir_input[1];
            #list _list_dir_input sim {};

            #repl _list_dir_input {$dir_to_remove;} {};
            #if {{$_list_dir_input} == {$dir_to_remove}} {
                #var _list_dir_input {};
            } {
                #list _list_dir_input cre {$_list_dir_input};
            };
        };

        #if {@sizeof{_list_dir_input}} {
            #local tmp @stack_push_walk{_stack_walk;$_list_dir_input[1]};
            #list _list_dir_input del 1;
        };
    };

    #nop hubiao log================================;
    #if {{$_walk_prefix} == {gan che to }} {
        #nop #system {touch hubiao.log; echo "$job_loc {@eval{1d100}$_current_room_name-$_hubiao_dir} {%1}" >> hubiao.log};
    };
    #nop hubiao log================================;
}
#eve {VARIABLE UPDATED _is_echo_back} {
    #if {$_is_echo_back} {
        #var _list_dir_input {};
    };
}

#nop roll back dir input due to invalid direction/busy;
#nop 你一脚深一脚浅地沿着黄河北岸向着西南方走去，虽然不快，但离目标越来越近了。;
#nop 土匪把路一挡，狞笑道：怎么，想溜，没那么容易！
#act {{^(你的动作还没有完成，不能移动。|西湖美则美矣，但你也犯不着投水自杀吧？|哎哟，你一头撞在墙上，才发现这个方向没有出路。|锦江看看就好了，难道你真要投河自尽吗？|你一脚深一脚浅地沿着.+走去|你小心翼翼往前挪动，遇到艰险难行处，只好放慢脚步。|你还在山中跋涉，一时半会恐怕走不出这藏边群山！ )}} { #if {@sizeof{_list_dir_input}} { #list _list_dir_input del 1 } } {4}

#act {^你因为种种原因停了下来，可以用walk继续进行。} {
    #if {{$_cnt_cntin_walk} == {%d} && $_cnt_cntin_walk} {
        #math _cnt_cntin_walk {$_cnt_cntin_walk-1};
        #delay 1 walk;
    };
    #elseif {{$_cnt_cntin_walk} == {%d}} { #nop _cnt_cntin_walk is 0;
        #var _cnt_cntin_walk 10;
    };
    #else {
        #var _cnt_cntin_walk 9;
        #delay 1 walk;
    };

    #nop reset auto resume walk;
    #delay _continue_walk {#var _cnt_cntin_walk 10} 10;
}

#act {{^^\s+这里明显的\S+有\s((\w+、)*\w+)\s和\s(\w+)。}} {
    #local exits {%2、%4};
    #rep exits {、} {;};
    #list list_exit cre $exits; 
    #nop #local tmp @plist{list_exit};
} {4}
#act {{^\s+这里唯一的\S+有\s(\w+)。}} {
    #list list_exit cre {%2};
    #nop #local tmp @plist{list_exit};
} {4};
#nop 浓雾中你依稀觉得似乎可以通往 south方向。
#act {{^\s+浓雾中你依稀觉得似乎可以通往\s(\w+)方向。}} {
    #list list_exit cre {%2};
    #nop #local tmp @plist{list_exit};
} {4};
#nop 浓雾中你觉得似乎有出口通往 north、 southeast和 west方向。
#act {{^\s+浓雾中你觉得似乎有出口通往((\s\w+、)*\s\w+)和(\s\w+)方向。}} {
    #local exits {%2、%4};
    #rep exits {、} {;};
    #rep exits { } {};
    #list list_exit cre $exits; 
    #local tmp @plist{list_exit};
} {4}
